//Znajdź trasy którymi można dostać się z Darjeeling na Sandakphu, mające najmniejszą ilość etapów

MATCH ta=shortestPath(
  (d:town {name:"Darjeeling"})-[*]->(p:peak {name:"Sandakphu"})
)
RETURN ta

//2. Znajdź mające najmniej etapów trasy którymi można dostać się z Darjeeling na Sandakphu i które mogą być wykorzystywane zimą
MATCH  (d:town { name: "Darjeeling" })
WITH d
MATCH (s:peak { name: "Sandakphu" })
MATCH path = ShortestPath((d)-[*..10]->(s))
WITH path
WHERE ALL (r IN  relationships(path) WHERE r.winter = "true")
RETURN path  //...10 to remove warnings

//3. Uszereguj trasy którymi można dostać się z Darjeeling na Sandakphu według dystansu
MATCH p = (source:town {name: "Darjeeling"})-[*]->(target:peak {name: "Sandakphu"})
UNWIND relationships(p) as rel
WITH p, COLLECT(rel.distance) AS distances
WITH p, reduce(acc = 0, d in distances | acc + d) as distance
RETURN p, distance
ORDER BY distance ASC //removed warnings

//4. Znajdź wszystkie miejsca do których można dotrzeć przy pomocy roweru (twowheeler) z Darjeeling latem
MATCH path = (d:town { name: "Darjeeling" })-[:twowheeler*]->(smwh)
WHERE ALL (r IN relationships(path) WHERE r.summer = 'true')
RETURN d,path

//brak widać to w MATCH p=()-[r:twowheeler]->() RETURN p LIMIT 25

